-- Recriação idempotente do banco e tabelas do Workz Platform
-- Alvo: MySQL 8 (docker-compose: service "mysql")

-- 1) Banco de dados
CREATE DATABASE IF NOT EXISTS `workz_platform_db`
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_unicode_ci;

USE `workz_platform_db`;

-- 2) Tabela: hpl (posts do editor)
-- Observação: o código insere a coluna "st" (status). Incluímos aqui.
CREATE TABLE IF NOT EXISTS `hpl` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `us` INT(11) NOT NULL COMMENT 'ID do usuário',
  `tp` VARCHAR(50) NOT NULL COMMENT 'Tipo do post (image, video, mixed ou código)',
  `dt` DATETIME NOT NULL COMMENT 'Data de criação',
  `cm` INT(11) DEFAULT 0 COMMENT 'Equipe (ID - opcional, usa 0 quando não aplicável)',
  `em` INT(11) DEFAULT 0 COMMENT 'Negócio (ID - opcional, usa 0 quando não aplicável)',
  `st` TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Status de publicação (1=publicado)',
  `ct` LONGTEXT NOT NULL COMMENT 'Conteúdo em JSON',
  PRIMARY KEY (`id`),
  KEY `idx_user` (`us`),
  KEY `idx_type` (`tp`),
  KEY `idx_date` (`dt`),
  KEY `idx_st` (`st`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Tabela de posts do editor';

-- 3) Tabela: hpl_comments (comentários dos posts)
CREATE TABLE IF NOT EXISTS `hpl_comments` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `pl` INT(11) NOT NULL COMMENT 'ID do post (hpl.id)',
  `us` INT(11) NOT NULL COMMENT 'ID do usuário',
  `ds` TEXT NOT NULL COMMENT 'Conteúdo do comentário',
  `dt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data/hora do comentário',
  PRIMARY KEY (`id`),
  KEY `idx_post` (`pl`),
  KEY `idx_user` (`us`),
  KEY `idx_dt` (`dt`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Comentários de posts do editor';

-- 4) Tabela: work_history (histórico profissional)
-- Baseada em database/migrations/2025_02_XX_create_work_history.sql
CREATE TABLE IF NOT EXISTS `work_history` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `us` INT UNSIGNED NOT NULL,                 -- user id
  `em` INT UNSIGNED NULL DEFAULT NULL,        -- company id (nullable)
  `tt` VARCHAR(150) NOT NULL,                 -- title/role
  `cf` TEXT NULL,                             -- description/details
  `type` VARCHAR(30) NULL,                    -- type: clt, contrato, freelancer, etc.
  `location` VARCHAR(150) NULL,               -- location (optional)
  `start_date` DATE NULL,                     -- start date
  `end_date` DATE NULL,                       -- end date (NULL means current)
  `visibility` TINYINT(1) NOT NULL DEFAULT 1, -- 1 visible, 0 hidden
  `verified` TINYINT(1) NOT NULL DEFAULT 0,   -- 1 verified by company, 0 not
  `verified_by` INT UNSIGNED NULL DEFAULT NULL,
  `verified_at` DATETIME NULL DEFAULT NULL,
  `st` TINYINT(1) NOT NULL DEFAULT 1,         -- status/ativo
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `idx_wh_user` (`us`),
  KEY `idx_wh_company` (`em`),
  KEY `idx_wh_status` (`st`),
  KEY `idx_wh_verified` (`verified`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

