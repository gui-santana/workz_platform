services:
  nginx:
    image: nginx:alpine
    container_name: workz_platform_nginx
    ports:
      - "9090:80"
    volumes:
      - ./:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/nginx/fastcgi_params:/etc/nginx/fastcgi_params
    depends_on:
      - php-fpm
      - mysql
    networks:
      - workz-network

  php-fpm:
    build:
      context: ./.docker/php
    container_name: workz_platform_php
    depends_on:
      - mysql
    volumes:
      - ./:/var/www/html
    networks:
      - workz-network

  mysql:
    image: mysql:8.0
    container_name: workz_platform_mysql
    platform: linux/amd64
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      # Nota: o app usa múltiplos schemas (workz_data, workz_companies, workz_apps).
      # Esta variável só define o schema inicial criado em ambientes novos.
      MYSQL_DATABASE: workz_data
      MYSQL_USER: workz
      MYSQL_PASSWORD: workzpass
      TZ: America/Sao_Paulo
    ports:
      - "3400:3306"    # opcional
    volumes:
      - db_data:/var/lib/mysql
      # Executa scripts .sql de inicialização automática no primeiro boot do volume
      - ./database:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -proot_password || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 40
      start_period: 60s
    networks:
      - workz-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: workz_platform_phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root_password
      UPLOAD_LIMIT: 256M
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - workz-network

networks:
  workz-network:
    driver: bridge

volumes:
  db_data: {}
